/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_TURNFIRSTORSECONDACTION_H
#define _MOCK_TURNFIRSTORSECONDACTION_H

#include "unity.h"
#include "turnFirstOrSecondAction.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_turnFirstOrSecondAction_Init(void);
void mock_turnFirstOrSecondAction_Destroy(void);
void mock_turnFirstOrSecondAction_Verify(void);




#define turnFirstActionFromForward_Ignore() turnFirstActionFromForward_CMockIgnore()
void turnFirstActionFromForward_CMockIgnore(void);
#define turnFirstActionFromForward_StopIgnore() turnFirstActionFromForward_CMockStopIgnore()
void turnFirstActionFromForward_CMockStopIgnore(void);
#define turnFirstActionFromForward_Expect(f, l, r, mode) turnFirstActionFromForward_CMockExpect(__LINE__, f, l, r, mode)
void turnFirstActionFromForward_CMockExpect(UNITY_LINE_TYPE cmock_line, int f, int l, int r, int mode);
typedef void (* CMOCK_turnFirstActionFromForward_CALLBACK)(int f, int l, int r, int mode, int cmock_num_calls);
void turnFirstActionFromForward_AddCallback(CMOCK_turnFirstActionFromForward_CALLBACK Callback);
void turnFirstActionFromForward_Stub(CMOCK_turnFirstActionFromForward_CALLBACK Callback);
#define turnFirstActionFromForward_StubWithCallback turnFirstActionFromForward_Stub
#define turnFirstActionFromBackward_Ignore() turnFirstActionFromBackward_CMockIgnore()
void turnFirstActionFromBackward_CMockIgnore(void);
#define turnFirstActionFromBackward_StopIgnore() turnFirstActionFromBackward_CMockStopIgnore()
void turnFirstActionFromBackward_CMockStopIgnore(void);
#define turnFirstActionFromBackward_Expect(f, l, r, mode) turnFirstActionFromBackward_CMockExpect(__LINE__, f, l, r, mode)
void turnFirstActionFromBackward_CMockExpect(UNITY_LINE_TYPE cmock_line, int f, int l, int r, int mode);
typedef void (* CMOCK_turnFirstActionFromBackward_CALLBACK)(int f, int l, int r, int mode, int cmock_num_calls);
void turnFirstActionFromBackward_AddCallback(CMOCK_turnFirstActionFromBackward_CALLBACK Callback);
void turnFirstActionFromBackward_Stub(CMOCK_turnFirstActionFromBackward_CALLBACK Callback);
#define turnFirstActionFromBackward_StubWithCallback turnFirstActionFromBackward_Stub
#define turnSecondAction_Ignore() turnSecondAction_CMockIgnore()
void turnSecondAction_CMockIgnore(void);
#define turnSecondAction_StopIgnore() turnSecondAction_CMockStopIgnore()
void turnSecondAction_CMockStopIgnore(void);
#define turnSecondAction_Expect() turnSecondAction_CMockExpect(__LINE__)
void turnSecondAction_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_turnSecondAction_CALLBACK)(int cmock_num_calls);
void turnSecondAction_AddCallback(CMOCK_turnSecondAction_CALLBACK Callback);
void turnSecondAction_Stub(CMOCK_turnSecondAction_CALLBACK Callback);
#define turnSecondAction_StubWithCallback turnSecondAction_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
